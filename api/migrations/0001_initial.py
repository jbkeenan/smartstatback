# Generated by Django 5.2.1 on 2025-06-03 02:16

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('GOOGLE', 'Google Calendar'), ('ICAL', 'iCalendar'), ('BOOKING', 'Booking System'), ('MANUAL', 'Manual Calendar')], max_length=20)),
                ('url', models.URLField(blank=True, null=True)),
                ('sync_frequency', models.CharField(choices=[('HOURLY', 'Hourly'), ('DAILY', 'Daily'), ('MANUAL', 'Manual')], max_length=20)),
                ('credentials', models.TextField(blank=True, null=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='api.property')),
            ],
            options={
                'verbose_name_plural': 'Calendars',
            },
        ),
        migrations.CreateModel(
            name='Thermostat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('device_id', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(choices=[('NEST', 'Nest'), ('CIELO', 'Cielo'), ('PIONEER', 'Pioneer')], max_length=20)),
                ('is_online', models.BooleanField(default=False)),
                ('last_temperature', models.FloatField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(blank=True, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thermostats', to='api.property')),
            ],
        ),
        migrations.CreateModel(
            name='TemperatureLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('temperature', models.FloatField()),
                ('is_occupied', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('thermostat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temperature_logs', to='api.thermostat')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('BOOKING', 'Booking-based'), ('TIME', 'Time-based'), ('OCCUPANCY', 'Occupancy-based')], max_length=20)),
                ('occupied_temp', models.FloatField()),
                ('unoccupied_temp', models.FloatField()),
                ('pre_arrival_hours', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('thermostat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='api.thermostat')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('company', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(default='manager', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
